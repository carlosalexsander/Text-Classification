threshold_sequence <- seq(from = 0.3, to = 0.8, by = 0.2)
max_ threshold <- testForThreshold(threshold_sequence)
max_threshold <- testForThreshold(threshold_sequence)
threshold_sequence <- seq(from = 0.3, to = 0.8, by = 0.2)
threshold_sequence[1]
threshold_sequence[2]
threshold_sequence <- seq(from = 0.3, to = 0.8, by = 0.02)
testForThreshold <- function(threshold_sequence) {
thresholdvector <- numeric()
for (i in 1:length(sequence)) {
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[i])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
fvector <- numeric()
for (i in 1:10) {
fvector <- RunKNN(complete_dtm)
}
vector[i] <- mean(fvector)
}
threshold_maximizer <- sequence[which.max(vector)]
}
max_threshold <- testForThreshold(threshold_sequence)
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = 0.3)
BuildDTM <- function(sentiment, directory, threshold) {
file_directory <- paste(wd, "/", sentiment, sep = "")
a <- Corpus(DirSource(directory = file_directory))
b <- CleanCorpus(a)
dtm <- DocumentTermMatrix(b)
dtm <- removeSparseTerms(dtm, threshold)
result <- list(review = sentiment, dtm = dtm)
return(result)
}
threshold_sequence <- seq(from = 0.3, to = 0.8, by = 0.02)
testForThreshold <- function(threshold_sequence) {
thresholdvector <- numeric()
for (i in 1:length(sequence)) {
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[i])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
fvector <- numeric()
for (i in 1:10) {
fvector <- RunKNN(complete_dtm)
}
vector[i] <- mean(fvector)
}
threshold_maximizer <- sequence[which.max(vector)]
}
max_threshold <- testForThreshold(threshold_sequence)
testForThreshold <- function(threshold_sequence) {
thresholdvector <- numeric()
for (i in 1:length(sequence)) {
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[i])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
fvector <- numeric()
for (i in 1:10) {
fvector[i] <- RunKNN(complete_dtm)
}
vector[i] <- mean(fvector)
}
threshold_maximizer <- sequence[which.max(vector)]
}
max_threshold <- testForThreshold(threshold_sequence)
fvector <- numeric()
vector <- numeric()
testForThreshold <- function(threshold_sequence) {
for (i in 1:length(sequence)) {
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[i])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
for (i in 1:10) {
fvector[i] <- RunKNN(complete_dtm)
}
vector[i] <- mean(fvector)
}
threshold_maximizer <- threshold_sequence[which.max(vector)]
}
max_threshold <- testForThreshold(threshold_sequence)
max_threshold
testForThreshold <- function(threshold_sequence) {
for (i in 1:length(sequence)) {
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[i])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
for (i in 1:10) {
fvector[i] <- RunKNN(complete_dtm)
}
vector[i] <- mean(fvector)
}
plot(x=threshold_sequence, y = vector)
threshold_maximizer <- threshold_sequence[which.max(vector)]
return(threshold_maximizer)
}
max_threshold <- testForThreshold(threshold_sequence)
testForThreshold <- function(threshold_sequence) {
for (i in 1:length(threshold_sequence)) {
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[i])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
for (i in 1:10) {
fvector[i] <- RunKNN(complete_dtm)
}
vector[i] <- mean(fvector)
}
plot(x=threshold_sequence, y = vector)
threshold_maximizer <- threshold_sequence[which.max(vector)]
return(threshold_maximizer)
}
max_threshold <- testForThreshold(threshold_sequence)
testForThreshold <- function(threshold_sequence) {
for (i in 1:length(threshold_sequence)) {
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[i])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
for (i in 1:10) {
fvector[i] <- RunKNN(complete_dtm)
}
vector[i] <- mean(fvector)
}
return(vector)
}
max_threshold <- testForThreshold(threshold_sequence)
pbinom(4,5,.5)
2^5
1/32
1/32 * 5
1/32 * 5 + 1/32
e^-11
exp(-11) * 15^11 / factorial(11)
exp(-15) * 15^11 / factorial(11)
1 - (exp(-15) * 15^11 / factorial(11))
exp(-15) * 15^10 / factorial(10) + exp(-15) * 15^9 / factorial(9)
qt(.975,9)
*10
qt(.975,9) * 10
qt(.975,9) * 10 + 1100
6 / 2.26
threshold_sequence <- seq(from = 0.3, to = 0.8, by = 0.1)
testForThreshold <- function(threshold_sequence) {
for (i in 1:length(threshold_sequence)) {
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[i])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
for (i in 1:10) {
fvector[i] <- RunKNN(complete_dtm)
}
vector[i] <- mean(fvector)
}
return(vector)
}
max_threshold <- testForThreshold(threshold_sequence)
max_threshold
length(threshold_sequence)
threshold_sequence[1]
threshold_sequence[2]
for (i in 1:length(threshold_sequence)) {
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[i])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
for (i in 1:10) {
fvector[i] <- RunKNN(complete_dtm)
}
vector[i] <- mean(fvector)
}
vector
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[1])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
for (i in 1:10) {
fvector[i] <- RunKNN(complete_dtm)
}
vector
for (i in 1:10) {
fvector[1] <- RunKNN(complete_dtm)
}
vector
mean(fvector)
for (i in 1:6) {
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold_sequence[i])
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
for (i in 1:10) {
fvector[i] <- RunKNN(complete_dtm)
}
vector[i] <- mean(fvector)
}
vector
threshold_sequence[2]
vector[1]
vector[2]
vector <- rep(0,length(threshold_sequence))
vector
f_scores <- rep(0,10)
f_scores[2]
RunnKNN(complete_dtm)
RunKNN(complete_dtm)
for (i in 1:6) {
threshold = threshold_sequence[i]
dtm <- lapply(sentiments, BuildDTM, directory = wd, threshold = threshold)
review_dtm <- lapply(dtm, AddSentiment)
complete_dtm <- do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] <- 0
set.seed(1000)
for (i in 1:10) {
f_scores[i] <- RunKNN(complete_dtm)
}
vector[i] <- mean(f_scores)
}
vector
vector <- rep(0,length(threshold_sequence))
test_script <- function(vector){
for (i in 1:10) {
vector[i] <- RunKNN(complete_dtm)
}
return(mean(vector))
}
for (i in 1:6) {
threshold = threshold_sequence[i]
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = threshold)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
complete_dtm = test_dtm
set.seed(1000)
for (i in 1:10) {
f_scores[i] <- RunKNN(test_dtm)
}
vector[i] <- mean(f_scores)
}
for (i in 1:6) {
threshold = threshold_sequence[i]
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = threshold)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
test_dtm = complete_dtm
set.seed(1000)
for (i in 1:10) {
f_scores[i] <- RunKNN(test_dtm)
}
vector[i] <- mean(f_scores)
}
vector
threshold = threshold_sequence[1]
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = threshold)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
test_dtm = complete_dtm
set.seed(1000)
for (i in 1:10) {
f_scores[i] <- RunKNN(test_dtm)
}
vector[i] <- mean(f_scores)
vector
vector[1] <- mean(f_scores)
rm(i)
for (i in 1:6) {
threshold = threshold_sequence[1]
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = threshold)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
test_dtm = complete_dtm
set.seed(1000)
for (j in 1:10) {
f_scores[j] <- RunKNN(test_dtm)
}
vector[i] <- mean(f_scores)
}
for (i in 1:6) {
threshold = threshold_sequence[i]
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = threshold)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
test_dtm = complete_dtm
set.seed(1000)
for (j in 1:10) {
f_scores[j] <- RunKNN(test_dtm)
}
vector[i] <- mean(f_scores)
}
vector
threshold_sequence <- seq(from = 0.3, to = 0.8, by = 0.05)
f_scores <- rep(0,10)
vector <- rep(0,length(threshold_sequence))
testForThreshold <- function(threshold_sequence) {
for (i in 1:length(threshold_sequence)) {
threshold = threshold_sequence[i]
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = threshold)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
test_dtm = complete_dtm
set.seed(1000)
for (j in 1:10) {
f_scores[j] <- RunKNN(test_dtm)
}
vector[i] <- mean(f_scores)
}
return(vector)
}
max_threshold <- testForThreshold(threshold_sequence)
max_threshold
threshold_se2 <- seq(.4,.6,.02)
max_threshold2 <- testForThreshold(threshold_se2)
max_threshold2
testForK <- function(ksequence) {
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = 0.48)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
set.seed(1000)
for (i in 1:length(ksequence)) {
for (j in 1:10){
f_scores2[j] = RunKNN(complete_dtm, k_value = ksequence[i])
}
vector2[i] = mean(f_scores2)
}
}
ksequence <- seq(1,10,1)
f_scores2 <- rep(0,10)
vector2 <- rep(0,length(ksequence))
max_k <- testForK(ksequence)
RunKNN <- function(complete_dtm, k_value){
random_ordering <- sample(nrow(complete_dtm), nrow(complete_dtm), replace = FALSE)
cutoff1 <- (ceiling(nrow(complete_dtm) * 0.6))
cutoff2 <- (ceiling(nrow(complete_dtm) * 0.8))
train_index <- random_ordering[1:cutoff1]
cross_val_index <- random_ordering[(cutoff1 + 1):cutoff2]
test_index <- random_ordering[(cutoff2 + 1):nrow(complete_dtm)]
dtm_sent <- complete_dtm[,"ReviewType"]
dtm_words <- complete_dtm[, !colnames(complete_dtm) %in% "ReviewType"]
knn_pred <- knn(train = dtm_words[train_index, ], test = dtm_words[cross_val_index, ], cl = dtm_sent[train_index], k = k_value)
confusion_matrix <- table("Predictions" = knn_pred, "Actual" = dtm_sent[cross_val_index])
precision <- confusion_matrix[1,1] / (confusion_matrix[1,1] + confusion_matrix[1,2])
recall <- confusion_matrix[1,1] / (confusion_matrix[1,1] + confusion_matrix[2,1])
f_score <- 2 * (precision * recall) / (precision + recall)
return(f_score)
}
max_k <- testForK(ksequence)
max_k
testForK <- function(ksequence) {
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = 0.48)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
set.seed(1000)
for (i in 1:length(ksequence)) {
for (j in 1:10){
f_scores2[j] = RunKNN(complete_dtm, k_value = ksequence[i])
}
vector2[i] = mean(f_scores2)
}
return(vector)
}
max_k <- testForK(ksequence)
max_k
RunKNN(complete_dtm,2)
RunKNN(complete_dtm,3)
RunKNN(complete_dtm,4)
RunKNN(complete_dtm,5)
RunKNN(complete_dtm,6)
RunKNN(complete_dtm,7)
RunKNN(complete_dtm,9)
RunKNN(complete_dtm,10)
ksequence
ksequence <- seq(1,10,1)
f_scores2 <- rep(0,10)
vector2 <- rep(0,length(ksequence))
max_k <- testForK(ksequence)
max_k
testForK <- function(ksequence) {
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = 0.48)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
set.seed(1000)
for (i in 1:length(ksequence)) {
for (j in 1:10){
f_scores2[j] = RunKNN(complete_dtm, k_value = ksequence[i])
}
vector2[i] = mean(f_scores2)
}
return(vector)
}
max_k <- testForK(ksequence)
max_k
ksequence <- seq(1,10,1)
f_scores2 <- rep(0,10)
vector2 <- rep(0,length(ksequence))
testForK <- function(ksequence) {
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = 0.48)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
set.seed(1000)
for (i in 1:length(ksequence)) {
for (j in 1:10) {
f_scores2[j] = RunKNN(complete_dtm = complete_dtm, k_value = ksequence[i])
}
vector2[i] = mean(f_scores2)
}
return(vector2)
}
max_k <- testForK(ksequence)
max_k
ksequence <- seq(1,20,1)
f_scores2 <- rep(0,50)
vector2 <- rep(0,length(ksequence))
max_k <- testForK(ksequence)
max_k
testForK <- function(ksequence) {
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = 0.48)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
for (i in 1:length(ksequence)) {
set.seed(1000)
for (j in 1:50) {
f_scores2[j] = RunKNN(complete_dtm = complete_dtm, k_value = ksequence[i])
}
vector2[i] = mean(f_scores2)
}
return(vector2)
}
testForK <- function(ksequence) {
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = 0.48)
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
for (i in 1:length(ksequence)) {
set.seed(1000)
for (j in 1:20) {
f_scores2[j] = RunKNN(complete_dtm = complete_dtm, k_value = ksequence[i])
}
vector2[i] = mean(f_scores2)
}
return(vector2)
}
ksequence <- seq(1,20,1)
f_scores2 <- rep(0,20)
vector2 <- rep(0,length(ksequence))
max_k <- testForK(ksequence)
max_k
testParameters <- function(tseq, kseq){
for (i in 1:length(tseq)) {
for (j in 1:length(kseq)) {
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = tseq[i])
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
for (k in 1:10) {
f_scores3[k] = RunKNN(complete_dtm = complete_dtm, k_value = kseq[j])
}
param_matrix[i,j] = mean(f_scores3)
}
}
return(param_matrix)
}
param_matrix <- matrix(0,length(tseq), length(kseq))
tseq <- seq(.45,.51,.03)
kseq <- seq(1,7,2)
param_matrix <- matrix(0,length(tseq), length(kseq))
ptest <- testParameters(tseq,kseq)
f_scores3 <- rep(0,10)
ptest <- testParameters(tseq,kseq)
ptest
tseq <- seq(.47,.49,.005)
kseq <- seq(1,7,2)
f_scores3 <- rep(0,10)
param_matrix <- matrix(0,length(tseq), length(kseq))
testParameters <- function(tseq, kseq){
for (i in 1:length(tseq)) {
for (j in 1:length(kseq)) {
dtm = lapply(sentiments, BuildDTM, directory = wd, threshold = tseq[i])
review_dtm = lapply(dtm, AddSentiment)
complete_dtm = do.call(rbind.fill, review_dtm)
complete_dtm[is.na(complete_dtm)] = 0
for (k in 1:10) {
f_scores3[k] = RunKNN(complete_dtm = complete_dtm, k_value = kseq[j])
}
param_matrix[i,j] = mean(f_scores3)
}
}
return(param_matrix)
}
ptest <- testParameters(tseq,kseq)
ptest
